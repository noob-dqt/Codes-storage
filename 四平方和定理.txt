四平方和定理：每个正整数均可表示为4个整数的平方和(或小于4个，但如果把0补齐就是所有的数都可以表示成4个数的平方和)
当且仅当n=(8m+7)*4^k时，n是由4个完全平方数得到，否则n只能由1个，2个或者3个数的平方和得到。

1.若n本身就是平方数，则由1个数(sqrt(n))的平方和组成

2.其次判断是否能由4个平方数组成（利用n=(8m+7)*4^k判据）
// 判断是否能表示为 4^k*(8m+7)
bool jg(int x) {
    while (x % 4 == 0) x /= 4;
        return x % 8 == 7;
}


3.接着判断是否能由2个数的平方和组成(直接遍历去找)

4.否则只能由3个数的平方和组成。