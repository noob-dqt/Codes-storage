康托展开：康托展开是一个全排列到一个自然数的双射，常用于构建哈希表时的空间压缩（一种特殊哈希函数）。
康托展开的实质是计算当前排列在所有由小到大全排列中的顺序。
计算公式：
X=a[n] * [(n-1)!] +a[n-1]*[(n-2)!]+....+a[1] * [0!]。

其中X代表 该字符串是全排列中的第X个排列, a[i]代表当前排列里从i位置右侧比i位置的数小的数的个数。

//一个字符串到int值的双射函数，通常用来找某排列处于从小到大（按字典序）全排列的第几位，从而构建哈希表
代码：

int factor[]={1,1,2,6,24,120,720,5040,40320,362880};	//0!~9!,若字符串长度长则可以先打出阶乘表，方便处理
int cantor(string s){					//n位字符串需要算到n-1!，阶乘表的长度为n
	int res=0;
	int l=s.size();
	for(int i=0;i<l;i++){
		int cnt=0;
		for(int j=i+1;j<l;j++)
		if(s[j]<s[i])
		cnt++;
		res+=cnt*factor[l-i-1];
	}
	return res;		//返回值是全排列中从小到大的位置，从0开始，即字符串s在全排列中从小到大是第res+1个
}